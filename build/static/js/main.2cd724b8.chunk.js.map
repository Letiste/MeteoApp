{"version":3,"sources":["MeteoCard.js","services/openweather.js","services/WeatherService.js","SearchBar.js","App.js","index.js","assets/animated/Clouds.svg","assets/animated/Clear.svg","assets/animated/Rain.svg","assets/animated/Snow.svg"],"names":["days","weathers","Clouds","Clear","Rain","Snow","useStyles","makeStyles","root","width","height","textAlign","padding","background","title","fontSize","fontWeight","tempMinMax","date","marginBottom","wind","rain","svg","marginRight","marginLeft","marginTop","temp","paddingTop","weather","MeteoCard","data","classes","useState","city","setCity","tempMin","setTempMin","tempMax","setTempMax","weekday","setWeekday","setDate","setWind","setRain","setTemp","setWeather","useEffect","main","today","Date","toLocaleDateString","day","getDay","name","Math","floor","temp_min","temp_max","speed","humidity","Paper","className","elevation","variant","Grid","container","item","xs","Typography","color","direction","alignItems","src","alt","axios","create","baseURL","headers","get","openweather","backgroundColor","borderRadius","SearchBar","setData","TextField","id","type","placeholder","value","InputProps","startAdornment","InputAdornment","position","onKeyPress","e","key","console","log","WeatherService","then","res","catch","onChange","setValue","target","handleChange","App","justify","ReactDOM","render","StrictMode","document","getElementById","module","exports"],"mappings":"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","file":"static/js/main.2cd724b8.chunk.js","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { PropTypes } from \"prop-types\";\nimport makeStyles from \"@material-ui/core/styles/makeStyles\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Clouds from \"./assets/animated/Clouds.svg\";\nimport Clear from \"./assets/animated/Clear.svg\";\nimport Rain from \"./assets/animated/Rain.svg\";\nimport Snow from \"./assets/animated/Snow.svg\";\n\nconst days = [\n  \"Sunday\",\n  \"Monday\",\n  \"Tuesday\",\n  \"Wednesday\",\n  \"Thursday\",\n  \"Friday\",\n  \"Saturday\",\n];\n\nconst weathers = { Clouds: Clouds, Clear: Clear, Rain: Rain, Snow: Snow };\n\nconst useStyles = makeStyles({\n  root: {\n    width: 500,\n    height: 250,\n    textAlign: \"center\",\n    padding: 20,\n    background: \"rgba(240,240,240,0.8)\",\n  },\n  title: { fontSize: 35, textAlign: \"left\", fontWeight: \"bold\" },\n  tempMinMax: { fontSize: 25, textAlign: \"right\" },\n  date: { fontSize: 25, marginBottom: 5 },\n  wind: { fontSize: 19 },\n  rain: { fontSize: 25 },\n  svg: { height: 250, marginRight: -110, marginLeft: -110, marginTop: -20 },\n  temp: {\n    fontSize: 100,\n    textAlign: \"right\",\n    fontWeight: \"bold\",\n    paddingTop: 20,\n  },\n  weather: {\n    fontSize: 35,\n    textAlign: \"center\",\n    fontWeight: \"bold\",\n  },\n});\n\nexport default function MeteoCard({ data }) {\n  const classes = useStyles();\n  const [city, setCity] = useState();\n  const [tempMin, setTempMin] = useState();\n  const [tempMax, setTempMax] = useState();\n  const [weekday, setWeekday] = useState();\n  const [date, setDate] = useState();\n  const [wind, setWind] = useState();\n  const [rain, setRain] = useState();\n  const [temp, setTemp] = useState();\n  const [weather, setWeather] = useState(\"Clear\");\n\n  useEffect(() => {\n    if (data) {\n      const main = data.main;\n      const today = new Date().toLocaleDateString();\n      const day = days[new Date().getDay()];\n      setCity(data.name);\n      setTempMin(Math.floor(main.temp_min - 273));\n      setTempMax(Math.floor(main.temp_max - 273));\n      setWeekday(day);\n      setDate(today);\n      setWind(data.wind.speed);\n      setRain(main.humidity);\n      setTemp(Math.floor(main.temp - 273));\n      setWeather(`${data.weather[0].main}`);\n    }\n  }, [data]);\n\n  return (\n    <>\n      {data ? (\n        <Paper className={classes.root} elevation={3} variant=\"outlined\">\n          <Grid container>\n            <Grid item xs={4}>\n              <Typography className={classes.title} color=\"textPrimary\">\n                {city}\n              </Typography>\n            </Grid>\n\n            <Grid item xs={4}>\n              <Typography className={classes.weather}>{weather}</Typography>\n            </Grid>\n\n            <Grid item xs={4}>\n              <Typography className={classes.tempMinMax}>\n                {tempMin}° {tempMax}°\n              </Typography>\n            </Grid>\n\n            <Grid item xs={4}>\n              <Grid container direction=\"column\" alignItems=\"flex-start\">\n                <Grid item className={classes.date}>\n                  <Typography className={classes.date}>{weekday}</Typography>\n                </Grid>\n                <Grid item className={classes.date}>\n                  <Typography className={classes.date}>{date}</Typography>\n                </Grid>\n                <Grid item className={classes.wind}>\n                  <Typography className={classes.wind}>\n                    Wind {wind}km/h\n                  </Typography>\n                </Grid>\n                <Grid item className={classes.rain}>\n                  <Typography className={classes.rain}>{rain}%</Typography>\n                </Grid>\n              </Grid>\n            </Grid>\n\n            <Grid item xs={4}>\n              <img\n                src={weathers[weather]}\n                className={classes.svg}\n                alt=\"cloudy-svg\"\n              />\n            </Grid>\n\n            <Grid item xs={4}>\n              <Typography className={classes.temp}>{temp}°</Typography>\n            </Grid>\n          </Grid>\n        </Paper>\n      ) : (\n        <></>\n      )}\n    </>\n  );\n}\n\nMeteoCard.propTypes = {\n  data: PropTypes.shape({\n    main: PropTypes.shape({\n      humidity: PropTypes.number,\n      temp: PropTypes.number,\n      temp_min: PropTypes.number,\n      temp_max: PropTypes.number,\n    }),\n    name: PropTypes.string,\n    weather: PropTypes.any,\n    wind: PropTypes.shape({\n      speed: PropTypes.number,\n    }),\n  }),\n};\n","import axios from \"axios\";\n\nexport default axios.create({\n  baseURL: \"https://api.openweathermap.org/data/2.5/\",\n  headers: { \"Content-type\": \"application/json\" },\n});\n","import openweather from \"./openweather\";\n\nconst APIkey = \"ed6bd70e2ab5c10c7c420a533a5a59cd\";\n\nfunction get(city) {\n  return openweather.get(`weather?q=${city}&units=metrics&appid=${APIkey}`);\n}\n\nexport default {\n  get,\n};\n","import PropTypes from \"prop-types\";\nimport React, { useState } from \"react\";\nimport makeStyles from \"@material-ui/core/styles/makeStyles\";\nimport InputAdornment from \"@material-ui/core/InputAdornment\";\nimport SearchIcon from \"@material-ui/icons/Search\";\nimport TextField from \"@material-ui/core/TextField\";\nimport WeatherService from \"./services/WeatherService\";\n\nconst useStyles = makeStyles({\n  root: {\n    marginTop: 30,\n    marginBottom: 30,\n    backgroundColor: \"rgba(240,240,240,0.8)\",\n    borderRadius: 4,\n  },\n});\n\nfunction handleChange(e, setValue) {\n  setValue(e.target.value);\n}\n\nexport default function SearchBar({ setData }) {\n  const classes = useStyles();\n  const [city, setCity] = useState(\"\");\n\n  function searchCity(e) {\n    if (e.key === \"Enter\") {\n      console.log(city);\n      WeatherService.get(city)\n        .then((res) => setData(res.data))\n        .catch(console.log);\n    }\n  }\n\n  return (\n    <TextField\n      className={classes.root}\n      id=\"input-with-icon-textfield\"\n      type=\"search\"\n      variant=\"outlined\"\n      placeholder=\"Search a City !\"\n      value={city}\n      InputProps={{\n        startAdornment: (\n          <InputAdornment position=\"start\">\n            <SearchIcon />\n          </InputAdornment>\n        ),\n      }}\n      onKeyPress={searchCity}\n      onChange={(e) => handleChange(e, setCity)}\n    />\n  );\n}\n\nSearchBar.propTypes = {\n  setData: PropTypes.func,\n};\n","import React, { useState } from \"react\";\nimport Grid from \"@material-ui/core/Grid\";\nimport MeteoCard from \"./MeteoCard\";\nimport SearchBar from \"./SearchBar\";\nimport Typography from \"@material-ui/core/Typography\";\nimport makeStyles from \"@material-ui/core/styles/makeStyles\";\n\nconst useStyles = makeStyles({\n  title: { color: \"white\" },\n});\n\nfunction App() {\n  const classes = useStyles();\n  const [data, setData] = useState();\n\n  return (\n    <Grid container direction=\"column\" justify=\"center\" alignItems=\"center\">\n      <Typography className={classes.title} variant=\"h1\">\n        MeteoApp\n      </Typography>\n      <SearchBar setData={setData} />\n      <MeteoCard data={data} />\n    </Grid>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport \"./index.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n","module.exports = __webpack_public_path__ + \"static/media/Clouds.ad789581.svg\";","module.exports = __webpack_public_path__ + \"static/media/Clear.7f93fbdb.svg\";","module.exports = __webpack_public_path__ + \"static/media/Rain.d235ab65.svg\";","module.exports = __webpack_public_path__ + \"static/media/Snow.b6eea2cf.svg\";"],"sourceRoot":""}